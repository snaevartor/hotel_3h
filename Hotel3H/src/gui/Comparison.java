package gui;

import hotel3h.Hotel;
import java.awt.Font;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Soley
 */
public class Comparison extends javax.swing.JDialog {
    /**
     * Creates new form Comparison2
     * @param parent
     * @param modal
     * @param hotel1
     * @param hotel2
     */
    static Hotel hotel1;
    static Hotel hotel2;
    int show; //Tells hotel_gui whether the user wants to look closer at either hotel or not
    Hotel chosen; //Tells hotel_gui which Hotel the user wants to look closer at
    static Object[][] data;
    static String[] columnNames;
    
    public Comparison(java.awt.Frame parent, boolean modal, Hotel h1, Hotel h2) {
        super(parent, modal);
        hotel1 = h1;
        hotel2 = h2;
        initComponents();
        show = 0;
        //Sets all labels.
        tabletest();
        jTable.setModel(new DefaultTableModel(data,columnNames));
        jTable.setEnabled(false);
        jTable.setFont(new Font("Tahoma",Font.PLAIN,14));
        jTable.getTableHeader().setFont(new Font("Tahoma",Font.BOLD,16));
        jTable.setRowHeight(20);
        jTable.sizeColumnsToFit(0);
    }
    //Getters which change 1 and 0 to "Yes"s and "No"s
    private String getGym(Hotel h){
        if(h.getGym()>0){
            return "Yes";
        }
        return "No";
    }

    private String getSpa(Hotel h){
        if(h.getSpa()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getPool(Hotel h){
        if(h.getPool()>0){
            return "Yes";
        }
        return "No";
    }

    private String getHottub(Hotel h){
        if(h.getHottub()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getWifi(Hotel h){
        if(h.getWifi()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getConferenceRoom(Hotel h){
        if(h.getConference()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getRestaurant(Hotel h){
        if(h.getRestaurant()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getBar(Hotel h){
        if(h.getBar()>0){
            return "Yes";
        }
        return "No";
    }

    private String getInclusive(Hotel h){
        if(h.getInclusive()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getBreakfast(Hotel h){
        if(h.getBreakfast()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getCancellation(Hotel h){
        if(h.getCancellation()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getRoomservice(Hotel h){
        if(h.getRoomservice()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getElevator(Hotel h){
        if(h.getElevator()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getFlybus(Hotel h){
        if(h.getFlybus()>0){
            return "Yes";
        }
        return "No";
    }
    
    private String getWheelchair(Hotel h){
        if(h.getWheelchair()>0){
            return "Yes";
        }
        return "No";
    }
    
    public Hotel getChosen(){
        return chosen;
    }
    
    private void tabletest(){
        data = new Object[][]{
            {"Stars:", hotel1.getStars(), hotel2.getStars()},
            {"Cheapest", hotel1.getMinPrice() + " USD",hotel2.getMinPrice() + " USD"},
            {"Most expensive:", hotel1.getMaxPrice() + " USD", hotel2.getMaxPrice() + " USD"},
            {"Address:", hotel1.getAddress(), hotel2.getAddress()},
            {"Free wifi:", getWifi(hotel1), getWifi(hotel2)},
            {"All inclusive", getInclusive(hotel1), getInclusive(hotel2)},
            {"Breakfast", getBreakfast(hotel1), getBreakfast(hotel2)},
            {"Gym", getGym(hotel1), getGym(hotel2)},
            {"Spa", getSpa(hotel1), getSpa(hotel2)},
            {"Restaurant", getRestaurant(hotel1), getRestaurant(hotel2)},
            {"Bar", getBar(hotel1), getBar(hotel2)},
            {"Elevator access:", getElevator(hotel1), getElevator(hotel2)},
            {"Wheelchair access:", getWheelchair(hotel1), getWheelchair(hotel2)},
            {"Free cancellation:", getCancellation(hotel1), getCancellation(hotel2)}
        };
        columnNames = new String[]{"Name:", hotel1.getName(), hotel2.getName()};
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jBookButton1 = new javax.swing.JButton();
        jBookButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Hotel comparison");

        jBookButton1.setText("Show more");
        jBookButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBookButton1ActionPerformed(evt);
            }
        });

        jBookButton2.setText("Show more");
        jBookButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBookButton2ActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBookButton1)
                        .addGap(187, 187, 187)
                        .addComponent(jBookButton2))
                    .addComponent(jLabel1))
                .addContainerGap(154, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBookButton1)
                    .addComponent(jBookButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Opens hotelView for a chosen hotel
    private void jBookButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBookButton1ActionPerformed
        // TODO add your handling code here:
        show = 1;
        chosen = hotel1;
        this.setVisible(false);
    }//GEN-LAST:event_jBookButton1ActionPerformed

    //Opens hotelView for a chosen hotel
    private void jBookButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBookButton2ActionPerformed
        // TODO add your handling code here:
        show = 2;
        chosen = hotel2;
        this.setVisible(false);
    }//GEN-LAST:event_jBookButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Comparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Comparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Comparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Comparison.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Comparison dialog = new Comparison(new javax.swing.JFrame(), true, hotel1, hotel2);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBookButton1;
    private javax.swing.JButton jBookButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
